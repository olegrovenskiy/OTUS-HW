// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TspuWebPortal.Data;

#nullable disable

namespace TspuWebPortal.Migrations
{
    [DbContext(typeof(TspuDbContext))]
    [Migration("20220314134125_AddModuleAModuleB")]
    partial class AddModuleAModuleB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TspuWebPortal.Data.CableData", b =>
                {
                    b.Property<int>("CableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CableId"));

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DeliveryYear")
                        .HasColumnType("integer");

                    b.Property<int>("DetailChangeId")
                        .HasColumnType("integer");

                    b.Property<int>("EntityModelId")
                        .HasColumnType("integer");

                    b.Property<int>("InitialDetailRecordId")
                        .HasColumnType("integer");

                    b.Property<string>("InventoryNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsInstalled")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SnType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CableId");

                    b.HasIndex("DetailChangeId");

                    b.HasIndex("EntityModelId");

                    b.HasIndex("InitialDetailRecordId");

                    b.ToTable("Cables");
                });

            modelBuilder.Entity("TspuWebPortal.Data.CardData", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CardId"));

                    b.Property<string>("CardSlotInChassis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CardStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ChassisId")
                        .HasColumnType("integer");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DeliveryYear")
                        .HasColumnType("integer");

                    b.Property<int>("DetailChangeId")
                        .HasColumnType("integer");

                    b.Property<int>("EntityModelId")
                        .HasColumnType("integer");

                    b.Property<int>("InitialDetailRecordId")
                        .HasColumnType("integer");

                    b.Property<string>("InventoryNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsInstalled")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SnType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CardId");

                    b.HasIndex("ChassisId");

                    b.HasIndex("DetailChangeId");

                    b.HasIndex("EntityModelId");

                    b.HasIndex("InitialDetailRecordId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("TspuWebPortal.Data.ChangeApplicationData", b =>
                {
                    b.Property<int>("DetailChangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DetailChangeId"));

                    b.Property<string>("ApplicationStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ChangeReason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("CompleteChangeDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsInstalled")
                        .HasColumnType("boolean");

                    b.Property<int>("JiraApplicationId")
                        .HasColumnType("integer");

                    b.Property<int?>("OperationDataOperationId")
                        .HasColumnType("integer");

                    b.Property<int>("OperationIdComplete")
                        .HasColumnType("integer");

                    b.Property<int>("OperationIdCreate")
                        .HasColumnType("integer");

                    b.Property<string>("ResponsiblePerson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SnNewDetail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SnOldDetail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DetailChangeId");

                    b.HasIndex("OperationDataOperationId");

                    b.ToTable("DetailChange");
                });

            modelBuilder.Entity("TspuWebPortal.Data.ChassisData", b =>
                {
                    b.Property<int>("ChassisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ChassisId"));

                    b.Property<string>("ChassisStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CurrentLocation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DeliveryYear")
                        .HasColumnType("integer");

                    b.Property<int>("DetailChangeId")
                        .HasColumnType("integer");

                    b.Property<int>("EntityModelId")
                        .HasColumnType("integer");

                    b.Property<string>("Hostname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("InitialDetailRecordId")
                        .HasColumnType("integer");

                    b.Property<string>("InventoryNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsInstalled")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SnType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ChassisId");

                    b.HasIndex("DetailChangeId");

                    b.HasIndex("EntityModelId");

                    b.HasIndex("InitialDetailRecordId");

                    b.ToTable("Chassis");
                });

            modelBuilder.Entity("TspuWebPortal.Data.DataCenterData", b =>
                {
                    b.Property<int>("DataCenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DataCenterId"));

                    b.Property<string>("DataCenterAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DataCenterName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DataCenterId");

                    b.ToTable("DataCenters");
                });

            modelBuilder.Entity("TspuWebPortal.Data.EntityModelData", b =>
                {
                    b.Property<int>("EntityModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EntityModelId"));

                    b.Property<int>("MaximalPower")
                        .HasColumnType("integer");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NominalPower")
                        .HasColumnType("integer");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("EntityModelId");

                    b.ToTable("EntityModel");
                });

            modelBuilder.Entity("TspuWebPortal.Data.FileData", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FileId"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("LastChangeDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("UploadDate")
                        .HasColumnType("date");

                    b.HasKey("FileId");

                    b.ToTable("FileData");
                });

            modelBuilder.Entity("TspuWebPortal.Data.InitialDetailRecordData", b =>
                {
                    b.Property<int>("InitialDetailRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InitialDetailRecordId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("DeliveryDate")
                        .HasColumnType("date");

                    b.Property<string>("DetailOfficialName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DetailOrigin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("InitialDetailTableId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsSplittable")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSuccessfullyUploaded")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OperationId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("ResponsiblePerson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("InitialDetailRecordId");

                    b.HasIndex("InitialDetailTableId");

                    b.HasIndex("OperationId");

                    b.ToTable("DetailRecord");
                });

            modelBuilder.Entity("TspuWebPortal.Data.InitialDetailTableData", b =>
                {
                    b.Property<int>("InitialDetailTableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InitialDetailTableId"));

                    b.Property<int>("FileId")
                        .HasColumnType("integer");

                    b.Property<int?>("TableFileFileId")
                        .HasColumnType("integer");

                    b.HasKey("InitialDetailTableId");

                    b.HasIndex("TableFileFileId");

                    b.ToTable("DetailTable");
                });

            modelBuilder.Entity("TspuWebPortal.Data.InitialMaterialRecordData", b =>
                {
                    b.Property<int>("InitialMaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InitialMaterialId"));

                    b.Property<DateOnly>("DeliveryDate")
                        .HasColumnType("date");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("InitialMaterialTableId")
                        .HasColumnType("integer");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MaterialOfficialName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OperationId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("InitialMaterialId");

                    b.HasIndex("InitialMaterialTableId");

                    b.HasIndex("OperationId");

                    b.ToTable("MaterialRecord");
                });

            modelBuilder.Entity("TspuWebPortal.Data.InitialMaterialTableData", b =>
                {
                    b.Property<int>("InitialMaterialTableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InitialMaterialTableId"));

                    b.Property<int>("FileId")
                        .HasColumnType("integer");

                    b.Property<int?>("TableFileFileId")
                        .HasColumnType("integer");

                    b.HasKey("InitialMaterialTableId");

                    b.HasIndex("TableFileFileId");

                    b.ToTable("MaterialTable");
                });

            modelBuilder.Entity("TspuWebPortal.Data.LicenseData", b =>
                {
                    b.Property<int>("LicenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LicenseId"));

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DeliveryYear")
                        .HasColumnType("integer");

                    b.Property<int>("EntityModelId")
                        .HasColumnType("integer");

                    b.Property<int>("InitialDetailRecordId")
                        .HasColumnType("integer");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SnType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LicenseId");

                    b.HasIndex("EntityModelId");

                    b.HasIndex("InitialDetailRecordId");

                    b.ToTable("Licenses");
                });

            modelBuilder.Entity("TspuWebPortal.Data.LinkData", b =>
                {
                    b.Property<int>("LinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LinkId"));

                    b.Property<int>("CableId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("CreationDate")
                        .HasColumnType("date");

                    b.Property<int>("DeliveryYear")
                        .HasColumnType("integer");

                    b.Property<bool>("IsNew")
                        .HasColumnType("boolean");

                    b.Property<int>("ModuleAId")
                        .HasColumnType("integer");

                    b.Property<int>("ModuleBId")
                        .HasColumnType("integer");

                    b.Property<int>("OperationId")
                        .HasColumnType("integer");

                    b.Property<string>("RdLinkId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VirtualPortA")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VirtualPortB")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LinkId");

                    b.HasIndex("CableId");

                    b.HasIndex("ModuleAId")
                        .IsUnique();

                    b.HasIndex("ModuleBId")
                        .IsUnique();

                    b.ToTable("Links");
                });

            modelBuilder.Entity("TspuWebPortal.Data.ModuleAData", b =>
                {
                    b.Property<int>("ModuleAId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ModuleAId"));

                    b.Property<int>("ModuleId")
                        .HasColumnType("integer");

                    b.HasKey("ModuleAId");

                    b.HasIndex("ModuleId")
                        .IsUnique();

                    b.ToTable("ModuleAData");
                });

            modelBuilder.Entity("TspuWebPortal.Data.ModuleBData", b =>
                {
                    b.Property<int>("ModuleBId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ModuleBId"));

                    b.Property<int>("ModuleId")
                        .HasColumnType("integer");

                    b.HasKey("ModuleBId");

                    b.HasIndex("ModuleId")
                        .IsUnique();

                    b.ToTable("ModuleBData");
                });

            modelBuilder.Entity("TspuWebPortal.Data.ModuleData", b =>
                {
                    b.Property<int>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ModuleId"));

                    b.Property<int>("CardId")
                        .HasColumnType("integer");

                    b.Property<string>("CardSlotInChassisOrCard")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ChassisId")
                        .HasColumnType("integer");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DeliveryYear")
                        .HasColumnType("integer");

                    b.Property<int>("DetailChangeId")
                        .HasColumnType("integer");

                    b.Property<int>("EntityModelId")
                        .HasColumnType("integer");

                    b.Property<int>("InitialDetailRecordId")
                        .HasColumnType("integer");

                    b.Property<string>("InventoryNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsInstalled")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ModuleStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ServeroMesto")
                        .HasColumnType("integer");

                    b.Property<string>("SnType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ModuleId");

                    b.HasIndex("CardId");

                    b.HasIndex("ChassisId");

                    b.HasIndex("DetailChangeId");

                    b.HasIndex("EntityModelId");

                    b.HasIndex("InitialDetailRecordId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("TspuWebPortal.Data.OperationData", b =>
                {
                    b.Property<int>("OperationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OperationId"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("OperationDate")
                        .HasColumnType("date");

                    b.Property<string>("OperationType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserListAccountId")
                        .HasColumnType("integer");

                    b.HasKey("OperationId");

                    b.HasIndex("UserListAccountId");

                    b.ToTable("OperationData");
                });

            modelBuilder.Entity("TspuWebPortal.Data.RackData", b =>
                {
                    b.Property<int>("RackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RackId"));

                    b.Property<int>("FreeServerSlotsQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("InstallationYear")
                        .HasColumnType("integer");

                    b.Property<bool>("IsInstalled")
                        .HasColumnType("boolean");

                    b.Property<int>("RackHeight")
                        .HasColumnType("integer");

                    b.Property<string>("RackNameAsbi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RackNameDataCenter")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RackType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("RoomRowId")
                        .HasColumnType("integer");

                    b.Property<int>("RowId")
                        .HasColumnType("integer");

                    b.HasKey("RackId");

                    b.HasIndex("RoomRowId");

                    b.ToTable("Racks");
                });

            modelBuilder.Entity("TspuWebPortal.Data.RoomData", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoomId"));

                    b.Property<int>("DataCenterId")
                        .HasColumnType("integer");

                    b.Property<string>("RoomCoordinates")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RoomId");

                    b.HasIndex("DataCenterId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("TspuWebPortal.Data.RowData", b =>
                {
                    b.Property<int>("RowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RowId"));

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.Property<string>("RowNameAsbi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RowNameDataCenter")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RowId");

                    b.HasIndex("RoomId");

                    b.ToTable("Rows");
                });

            modelBuilder.Entity("TspuWebPortal.Data.ServerLinkData", b =>
                {
                    b.Property<int>("ServerLinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ServerLinkId"));

                    b.Property<int>("ServerSlotId")
                        .HasColumnType("integer");

                    b.Property<int?>("ServerSlotsServerSlotId")
                        .HasColumnType("integer");

                    b.Property<int>("ServerTypeId")
                        .HasColumnType("integer");

                    b.HasKey("ServerLinkId");

                    b.HasIndex("ServerSlotsServerSlotId");

                    b.ToTable("ServerLinks");
                });

            modelBuilder.Entity("TspuWebPortal.Data.ServerSlotData", b =>
                {
                    b.Property<int>("ServerSlotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ServerSlotId"));

                    b.Property<string>("SlotIndex")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer");

                    b.HasKey("ServerSlotId");

                    b.ToTable("ServerSlots");
                });

            modelBuilder.Entity("TspuWebPortal.Data.SiteData", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FederalDistrict")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IsInProject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Links")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MaintainanceStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Oper")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PipelineStage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RegionNumber")
                        .HasColumnType("integer");

                    b.Property<string>("SiteType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("TspuWebPortal.Data.UnitData", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UnitId"));

                    b.Property<int>("ChassisId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsFront")
                        .HasColumnType("boolean");

                    b.Property<int>("RackId")
                        .HasColumnType("integer");

                    b.Property<string>("RowNameAsbi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RowNameDataCenter")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ServerSlotId")
                        .HasColumnType("integer");

                    b.Property<int>("UnitInRack")
                        .HasColumnType("integer");

                    b.HasKey("UnitId");

                    b.HasIndex("ChassisId");

                    b.HasIndex("RackId");

                    b.HasIndex("ServerSlotId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("TspuWebPortal.Data.UserListData", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AccountId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullPersonName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AccountId");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("TspuWebPortal.Data.CableData", b =>
                {
                    b.HasOne("TspuWebPortal.Data.ChangeApplicationData", "DetailChange")
                        .WithMany("Cables")
                        .HasForeignKey("DetailChangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TspuWebPortal.Data.EntityModelData", "EntityModel")
                        .WithMany("Cables")
                        .HasForeignKey("EntityModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TspuWebPortal.Data.InitialDetailRecordData", "InitialDetailRecord")
                        .WithMany("Cables")
                        .HasForeignKey("InitialDetailRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DetailChange");

                    b.Navigation("EntityModel");

                    b.Navigation("InitialDetailRecord");
                });

            modelBuilder.Entity("TspuWebPortal.Data.CardData", b =>
                {
                    b.HasOne("TspuWebPortal.Data.ChassisData", "Chassis")
                        .WithMany("Cards")
                        .HasForeignKey("ChassisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TspuWebPortal.Data.ChangeApplicationData", "DetailChange")
                        .WithMany("Cards")
                        .HasForeignKey("DetailChangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TspuWebPortal.Data.EntityModelData", "EntityModel")
                        .WithMany("Cards")
                        .HasForeignKey("EntityModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TspuWebPortal.Data.InitialDetailRecordData", "InitialDetailRecord")
                        .WithMany("Card")
                        .HasForeignKey("InitialDetailRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chassis");

                    b.Navigation("DetailChange");

                    b.Navigation("EntityModel");

                    b.Navigation("InitialDetailRecord");
                });

            modelBuilder.Entity("TspuWebPortal.Data.ChangeApplicationData", b =>
                {
                    b.HasOne("TspuWebPortal.Data.OperationData", null)
                        .WithMany("ChangeApplications")
                        .HasForeignKey("OperationDataOperationId");
                });

            modelBuilder.Entity("TspuWebPortal.Data.ChassisData", b =>
                {
                    b.HasOne("TspuWebPortal.Data.ChangeApplicationData", "DetailChange")
                        .WithMany("Chassis")
                        .HasForeignKey("DetailChangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TspuWebPortal.Data.EntityModelData", "EntityModel")
                        .WithMany("Chassis")
                        .HasForeignKey("EntityModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TspuWebPortal.Data.InitialDetailRecordData", "InitialDetailRecord")
                        .WithMany("Chassis")
                        .HasForeignKey("InitialDetailRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DetailChange");

                    b.Navigation("EntityModel");

                    b.Navigation("InitialDetailRecord");
                });

            modelBuilder.Entity("TspuWebPortal.Data.InitialDetailRecordData", b =>
                {
                    b.HasOne("TspuWebPortal.Data.InitialDetailTableData", "InitialDetailTable")
                        .WithMany("InitialDetailRecords")
                        .HasForeignKey("InitialDetailTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TspuWebPortal.Data.OperationData", "Operation")
                        .WithMany("InitialDetailRecord")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InitialDetailTable");

                    b.Navigation("Operation");
                });

            modelBuilder.Entity("TspuWebPortal.Data.InitialDetailTableData", b =>
                {
                    b.HasOne("TspuWebPortal.Data.FileData", "TableFile")
                        .WithMany("InitialDetailTables")
                        .HasForeignKey("TableFileFileId");

                    b.Navigation("TableFile");
                });

            modelBuilder.Entity("TspuWebPortal.Data.InitialMaterialRecordData", b =>
                {
                    b.HasOne("TspuWebPortal.Data.InitialMaterialTableData", "InitialMaterialTable")
                        .WithMany("InitialMaterialRecords")
                        .HasForeignKey("InitialMaterialTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TspuWebPortal.Data.OperationData", "Operation")
                        .WithMany("InitialMaterialRecord")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InitialMaterialTable");

                    b.Navigation("Operation");
                });

            modelBuilder.Entity("TspuWebPortal.Data.InitialMaterialTableData", b =>
                {
                    b.HasOne("TspuWebPortal.Data.FileData", "TableFile")
                        .WithMany("InitialMaterialTables")
                        .HasForeignKey("TableFileFileId");

                    b.Navigation("TableFile");
                });

            modelBuilder.Entity("TspuWebPortal.Data.LicenseData", b =>
                {
                    b.HasOne("TspuWebPortal.Data.EntityModelData", "EntityModel")
                        .WithMany("Licenses")
                        .HasForeignKey("EntityModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TspuWebPortal.Data.InitialDetailRecordData", "InitialDetailRecord")
                        .WithMany("Licenses")
                        .HasForeignKey("InitialDetailRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntityModel");

                    b.Navigation("InitialDetailRecord");
                });

            modelBuilder.Entity("TspuWebPortal.Data.LinkData", b =>
                {
                    b.HasOne("TspuWebPortal.Data.CableData", "Cable")
                        .WithMany()
                        .HasForeignKey("CableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TspuWebPortal.Data.ModuleAData", "ModuleA")
                        .WithOne("Link")
                        .HasForeignKey("TspuWebPortal.Data.LinkData", "ModuleAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TspuWebPortal.Data.ModuleBData", "ModuleB")
                        .WithOne("Link")
                        .HasForeignKey("TspuWebPortal.Data.LinkData", "ModuleBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cable");

                    b.Navigation("ModuleA");

                    b.Navigation("ModuleB");
                });

            modelBuilder.Entity("TspuWebPortal.Data.ModuleAData", b =>
                {
                    b.HasOne("TspuWebPortal.Data.ModuleData", "Module")
                        .WithOne("ModuleA")
                        .HasForeignKey("TspuWebPortal.Data.ModuleAData", "ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("TspuWebPortal.Data.ModuleBData", b =>
                {
                    b.HasOne("TspuWebPortal.Data.ModuleData", "Module")
                        .WithOne("ModuleB")
                        .HasForeignKey("TspuWebPortal.Data.ModuleBData", "ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("TspuWebPortal.Data.ModuleData", b =>
                {
                    b.HasOne("TspuWebPortal.Data.CardData", "Card")
                        .WithMany("Modules")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TspuWebPortal.Data.ChassisData", "Chassis")
                        .WithMany("Modules")
                        .HasForeignKey("ChassisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TspuWebPortal.Data.ChangeApplicationData", "DetailChange")
                        .WithMany("Modules")
                        .HasForeignKey("DetailChangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TspuWebPortal.Data.EntityModelData", "EntityModel")
                        .WithMany("Modules")
                        .HasForeignKey("EntityModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TspuWebPortal.Data.InitialDetailRecordData", "InitialDetailRecord")
                        .WithMany("Module")
                        .HasForeignKey("InitialDetailRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Chassis");

                    b.Navigation("DetailChange");

                    b.Navigation("EntityModel");

                    b.Navigation("InitialDetailRecord");
                });

            modelBuilder.Entity("TspuWebPortal.Data.OperationData", b =>
                {
                    b.HasOne("TspuWebPortal.Data.UserListData", "UserList")
                        .WithMany("Operations")
                        .HasForeignKey("UserListAccountId");

                    b.Navigation("UserList");
                });

            modelBuilder.Entity("TspuWebPortal.Data.RackData", b =>
                {
                    b.HasOne("TspuWebPortal.Data.RowData", "Room")
                        .WithMany("Rows")
                        .HasForeignKey("RoomRowId");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("TspuWebPortal.Data.RoomData", b =>
                {
                    b.HasOne("TspuWebPortal.Data.DataCenterData", "DataCenter")
                        .WithMany("Rooms")
                        .HasForeignKey("DataCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataCenter");
                });

            modelBuilder.Entity("TspuWebPortal.Data.RowData", b =>
                {
                    b.HasOne("TspuWebPortal.Data.RoomData", "Room")
                        .WithMany("Rows")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("TspuWebPortal.Data.ServerLinkData", b =>
                {
                    b.HasOne("TspuWebPortal.Data.ServerSlotData", "ServerSlots")
                        .WithMany("ServerLinks")
                        .HasForeignKey("ServerSlotsServerSlotId");

                    b.Navigation("ServerSlots");
                });

            modelBuilder.Entity("TspuWebPortal.Data.UnitData", b =>
                {
                    b.HasOne("TspuWebPortal.Data.ChassisData", "Chassis")
                        .WithMany("Units")
                        .HasForeignKey("ChassisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TspuWebPortal.Data.RackData", "Rack")
                        .WithMany("Rows")
                        .HasForeignKey("RackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TspuWebPortal.Data.ServerSlotData", "ServerSlot")
                        .WithMany("Units")
                        .HasForeignKey("ServerSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chassis");

                    b.Navigation("Rack");

                    b.Navigation("ServerSlot");
                });

            modelBuilder.Entity("TspuWebPortal.Data.CardData", b =>
                {
                    b.Navigation("Modules");
                });

            modelBuilder.Entity("TspuWebPortal.Data.ChangeApplicationData", b =>
                {
                    b.Navigation("Cables");

                    b.Navigation("Cards");

                    b.Navigation("Chassis");

                    b.Navigation("Modules");
                });

            modelBuilder.Entity("TspuWebPortal.Data.ChassisData", b =>
                {
                    b.Navigation("Cards");

                    b.Navigation("Modules");

                    b.Navigation("Units");
                });

            modelBuilder.Entity("TspuWebPortal.Data.DataCenterData", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("TspuWebPortal.Data.EntityModelData", b =>
                {
                    b.Navigation("Cables");

                    b.Navigation("Cards");

                    b.Navigation("Chassis");

                    b.Navigation("Licenses");

                    b.Navigation("Modules");
                });

            modelBuilder.Entity("TspuWebPortal.Data.FileData", b =>
                {
                    b.Navigation("InitialDetailTables");

                    b.Navigation("InitialMaterialTables");
                });

            modelBuilder.Entity("TspuWebPortal.Data.InitialDetailRecordData", b =>
                {
                    b.Navigation("Cables");

                    b.Navigation("Card");

                    b.Navigation("Chassis");

                    b.Navigation("Licenses");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("TspuWebPortal.Data.InitialDetailTableData", b =>
                {
                    b.Navigation("InitialDetailRecords");
                });

            modelBuilder.Entity("TspuWebPortal.Data.InitialMaterialTableData", b =>
                {
                    b.Navigation("InitialMaterialRecords");
                });

            modelBuilder.Entity("TspuWebPortal.Data.ModuleAData", b =>
                {
                    b.Navigation("Link");
                });

            modelBuilder.Entity("TspuWebPortal.Data.ModuleBData", b =>
                {
                    b.Navigation("Link");
                });

            modelBuilder.Entity("TspuWebPortal.Data.ModuleData", b =>
                {
                    b.Navigation("ModuleA");

                    b.Navigation("ModuleB");
                });

            modelBuilder.Entity("TspuWebPortal.Data.OperationData", b =>
                {
                    b.Navigation("ChangeApplications");

                    b.Navigation("InitialDetailRecord");

                    b.Navigation("InitialMaterialRecord");
                });

            modelBuilder.Entity("TspuWebPortal.Data.RackData", b =>
                {
                    b.Navigation("Rows");
                });

            modelBuilder.Entity("TspuWebPortal.Data.RoomData", b =>
                {
                    b.Navigation("Rows");
                });

            modelBuilder.Entity("TspuWebPortal.Data.RowData", b =>
                {
                    b.Navigation("Rows");
                });

            modelBuilder.Entity("TspuWebPortal.Data.ServerSlotData", b =>
                {
                    b.Navigation("ServerLinks");

                    b.Navigation("Units");
                });

            modelBuilder.Entity("TspuWebPortal.Data.UserListData", b =>
                {
                    b.Navigation("Operations");
                });
#pragma warning restore 612, 618
        }
    }
}
