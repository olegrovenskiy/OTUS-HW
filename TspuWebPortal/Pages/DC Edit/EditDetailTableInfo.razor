@page "/detailtable_navigation/{ID:int}"
@inject SiteDataService objDataService
@inject DcFileService objFileService
@inject DcInitialDetailTableService objDetailTableService
@using TspuWebPortal.Model
@using TspuWebPortal.ORM
@using TspuWebPortal.Shared
@using TspuWebPortal.Scripts
@inherits OwningComponentBase<SiteDataService>
@using static TspuWebPortal.Model.ComponentEnums

<h3>Площадка @ChosenDetailTable.InitialDetailTableId. Редактирование таблицы деталей.</h3>

<EditForm Model=@ChosenDetailTable OnSubmit=@FormSubmitted>
  <div class="row">
    <div class = "col-4">
        <label for="RoomCoordinates">Название файла</label>
        <InputSelect id="DataCenter" @bind-Value="FileId" class="form-control">
            <option value=null>Надо выбрать</option>

            @if (ChosenDetailTable.TableFile != null) {<option value="@ChosenDetailTable.FileId">@ChosenDetailTable.TableFile?.FileName</option>}
            @foreach (var item in DcFileList)                                   //здесь надо добавить проверку, что не выбрана подсказка
            {
                <option value="@item.FileId">@item.FileName</option>
            }
        </InputSelect>
    </div>
    <div class = "col-4">
        <label for="ContractName">Номер Договора</label>
        <InputText @bind-Value=ContractName class="form-control" id="ContractName" />
    </div>
  </div>
  <br>
<input type="submit" class="btn btn-primary" value="Сохранить"/>
</EditForm>
<p>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p>
<p></p>
@if (ChosenDetailTable.TableFile != null)
{
    <p>Работаем с файлом @ChosenDetailTable.TableFile?.FileName</p>
    <p>
        <label>
            <button class="btn btn-primary" @onclick="StartParseScript">Начать обработку</button>
        </label>
    </p>
}


@if (IsFileParsed)
{
    <p>Успешно считаны данные по @AllVedomostList.Count позициям.</p>
    <p>Номер договора: @ContractName.</p>
    <p>
        <label>
            <button class="btn btn-primary" @onclick="StartCreateInitialRecords">Начать перенос данных в первичную таблицу</button>
            <p>@StartedCreateInitialRecord</p>
        </label>
    </p>
}



@code {
    [Parameter]
    public int ID { get; set; }

    InitialDetailTableData ChosenDetailTable = new InitialDetailTableData ();
    List<FileData> DcFileList = new List<FileData>();
    FileData UpdatedFile = new FileData();
    List<VedomostData> AllVedomostList = new List<VedomostData>();
    //List<EntityModelData> AllEntities = new List<EntityModelData>();
    List<InitialDetailRecordData> SingleRecord = new List<InitialDetailRecordData>();
    bool IsFileParsed = false;
    bool IsDataSourceChosen = false;
    bool StartedCreateInitialRecord = false;
    string DataSource = "";
    string ContractName = "";

    private int _FileId;
    public int FileId { get => _FileId;
        set { _FileId = value; UpdatedFile = objFileService.GetFileDataInfoById(value); ChosenDetailTable.FileId = value; UpdatedFile.IsAppliedToTable = true; objFileService.UpdateFileInfo(UpdatedFile); } }


    protected override async Task OnInitializedAsync()
    {
        DcFileList = await Task.Run(() => objFileService.ListFilesOfSpecificCategory());
        ChosenDetailTable = await Task.Run(() => objDetailTableService.GetDetailTableDataInfoById(Convert.ToInt32(ID)));
    }

    void FormSubmitted(EditContext editContext)
    {
        bool formIsValid = editContext.Validate();
        if (formIsValid)
        {
            objDetailTableService.UpdateDetailTableInfo(ChosenDetailTable);
        }
    }

    void StartParseScript()
    {
        AllVedomostList = ParseVedomost.GetAllRecords(ChosenDetailTable?.TableFile?.FilePath);
        ChosenDetailTable.RegisterDate = DateOnly.FromDateTime(DateTime.Now);
        IsFileParsed = true;
        return;
    }

    void StartCreateInitialRecords()
    {
        foreach (VedomostData SingleVedomostRecord in AllVedomostList)
        {
            
        }
        StartedCreateInitialRecord = true;
        //CreateDetailRecordModel

        return;
    }




        //UpdatedFile = objFileService.GetFileDataInfoById(ChosenDetailTable.FileId);
        // <option value="@ChosenDetailTable.FileId">@ChosenDetailTable.TableFile?.FileName</option>

        //1. Для записи файла установить в true переменную IsApplied...
        //2. Для записи таблицы вместе с добавлением переменной файла добавить дату регистрации.
        //3. Добавить публикацию имени/пути файла.

        //FileInfoAppendedToDetailTable
        //UpdateEntityModelInfo
        //Убрать двойное появление названия файла в списке выборки.
    //public int DcId { get => _DcId;  set { _DcId = value; DcRoomPartialList = objDataService.ListRoomsOnSpecificDataCenter(value); } }



    /*
     @if (IsFileParsed)
{
    <table class="table">
        <thead>
            <tr>
                <th>Серийный номер</th>
                <th>Номер п/п</th>
                <th>ЦОД</th>
                <th>Расположение</th>
            </tr>
        </thead>
        <tbody>
            @foreach (VedomostData CurrentRow in AllVedomostList)
            { 
                    <tr>
                    <td>@CurrentRow.SerialNumber</td>
                    <td>@CurrentRow.ItemNumber</td>
                    <td>@CurrentRow.DataCenter</td>
                    <td>@CurrentRow.Place</td>
                    </tr>
            }
        </tbody>
    </table>    
}
     * 

     <EditForm Model=@ChosenDetailTable OnSubmit=@FormSubmitted>
  <div class="row">
    <div class = "col-4">
        <label for="RoomCoordinates">Название файла</label>
        <InputSelect id="DataCenter" @bind-Value="FileId" class="form-control">
            <option value=null>Надо выбрать</option>

            @if (ChosenDetailTable.TableFile != null) {<option value="@ChosenDetailTable.FileId">@ChosenDetailTable.TableFile?.FileName</option>}
            @foreach (var item in DcFileList)                                   //здесь надо добавить проверку, что не выбрана подсказка
            {
                <option value="@item.FileId">@item.FileName</option>
            }
        </InputSelect>
    </div>
    <div class = "col-4">
        <label for="EntityModelModelName">Ответственный/контракт</label>
        <InputText @bind-Value=ChosenEntityModel.ModelName class="form-control" id="ModelName" />
    </div>
  </div>
  <br>
<input type="submit" class="btn btn-primary" value="Сохранить"/>
</EditForm>



@if (IsFileParsed)
{
    <p>Успешно считаны данные по @AllVedomostList.Count позициям.</p>
    <p>Заполняем данные по поставке.</p>

  <EditForm Model=@ChosenDetailTable OnSubmit=@ChooseDataSource>
  <div class="row">
    <div class = "col-4">
        <label for="RoomCoordinates">Название файла</label>
        <InputRadioGroup @bind-Value="DataSource">
        <br>
        @foreach (var item in (Submitter[])Enum
            .GetValues(typeof(Submitter)))
        {
            <InputRadio Value="@item" />
            <text>&nbsp;</text>@item<br>
        }
        </InputRadioGroup>
    </div>
  </div>
  <br>
<input type="submit" class="btn btn-primary" value="Сохранить"/>
</EditForm>
<p>Источник: @DataSource</p>
<p>Флаг: @IsDataSourceChosen</p>
}





     */




}